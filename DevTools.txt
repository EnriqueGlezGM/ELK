PUT reindexubicacion
{
  "mappings": {
    "properties": {
      "geo": {
        "type": "geo_point"
      }
    }
  }
}

POST _reindex
{
  "source": {
    "index": "ubicacion"
  },
  "dest": {
    "index": "reindexubicacion"
  }
}


PUT _watcher/watch/Device_Protection_Plan
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Device_Protection_Plan"
  }
}
PUT _watcher/watch/Internet_Service
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Internet_Service"
  }
}
PUT _watcher/watch/Multiple_Lines
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Multiple_Lines"
  }
}
PUT _watcher/watch/Online_Backup
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Online_Backup"
  }
}
PUT _watcher/watch/Online_Security
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Online_Security"
  }
}
PUT _watcher/watch/Paperless_Billing
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Paperless_Billing"
  }
}
PUT _watcher/watch/Phone_Service
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Phone_Service"
  }
}
PUT _watcher/watch/Premium_Tech_Support
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Premium_Tech_Support"
  }
}
PUT _watcher/watch/Referred_a_Friend
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Referred_a_Friend"
  }
}
PUT _watcher/watch/Streaming_Movies
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Streaming_Movies"
  }
}
PUT _watcher/watch/Streaming_Music
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Streaming_Music"
  }
}
PUT _watcher/watch/Streaming_TV
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Streaming_TV"
  }
}
PUT _watcher/watch/Unlimited_Data
{
  "trigger": {
    "schedule": {
      "interval": "370d"
    }
  },
  "input": {
    "chain": {
      "inputs": [
        {
          "first": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "servicios"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 7043,
                  "_source": [
                    "Customer_ID"
                  ],
                  "query": {
                    "bool": {
                      "filter": {
                        "term": {
                          "{{ctx.metadata.servicio}}": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        {
          "second": {
            "transform": {
              "script": {
                "source": """
              def arrayCustomer_IDs=[];
              for (def item : ctx.payload.first.hits.hits) {
                arrayCustomer_IDs.add(item._source.Customer_ID);
              }
              return arrayCustomer_IDs
              """,
                "lang": "painless"
              }
            }
          }
        },
        {
          "third": {
            "search": {
              "request": {
                "search_type": "query_then_fetch",
                "indices": [
                  "estado"
                ],
                "rest_total_hits_as_int": true,
                "body": {
                  "size": 0,
                  "query": {
                    "bool": {
                      "filter": [
                        {
                          "terms": {
                            "Customer_ID.keyword": [
                              "{{#join delimiter='",
                              "'}}ctx.payload.second._value{{/join delimiter='",
                              "'}}"
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "aggs": {
                    "Satisfaction_Score": {
                      "terms": {
                        "field": "Satisfaction_Score",
                        "order": {
                          "_key": "desc"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "condition": {
    "always": {}
  },
  "actions": {
    "index_payload": {
      "transform": {
        "script": {
          "source": """
            def map = [:];
            map.identificador = ctx.metadata.servicio;
            for (def item : ctx.payload.third.aggregations.Satisfaction_Score.buckets) {
              if(item.key===5){
                map.satisfaction5 = item.doc_count;
              }
              if(item.key===4){
                map.satisfaction4 = item.doc_count;
              }
              if(item.key===3){
                map.satisfaction3 = item.doc_count;
              }
              if(item.key===2){
                map.satisfaction2 = item.doc_count;
              }
              if(item.key===1){
                map.satisfaction1 = item.doc_count;
              }
            }
            return map
          """,
          "lang": "painless"
        }
      },
      "index": {
        "index": "satisfaction_scores"
      }
    }
  },
  "metadata": {
    "servicio": "Unlimited_Data"
  }
}


POST _watcher/watch/Device_Protection_Plan/_execute
POST _watcher/watch/Internet_Service/_execute
POST _watcher/watch/Multiple_Lines/_execute
POST _watcher/watch/Online_Backup/_execute
POST _watcher/watch/Online_Security/_execute
POST _watcher/watch/Paperless_Billing/_execute
POST _watcher/watch/Phone_Service/_execute
POST _watcher/watch/Premium_Tech_Support/_execute
POST _watcher/watch/Referred_a_Friend/_execute
POST _watcher/watch/Streaming_Movies/_execute
POST _watcher/watch/Streaming_Music/_execute
POST _watcher/watch/Streaming_TV/_execute
POST _watcher/watch/Unlimited_Data/_execute